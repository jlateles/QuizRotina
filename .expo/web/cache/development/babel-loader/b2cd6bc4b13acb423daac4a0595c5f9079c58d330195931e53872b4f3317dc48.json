{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { questions } from \"./data\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar QuestionScreen = function QuestionScreen() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentQuestionIndex = _useState2[0],\n    setCurrentQuestionIndex = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    score = _useState4[0],\n    setScore = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showResult = _useState6[0],\n    setShowResult = _useState6[1];\n  var currentQuestion = questions[currentQuestionIndex];\n  var question = currentQuestion.question,\n    options = currentQuestion.options;\n  var handleAnswer = function handleAnswer(points) {\n    setScore(score + points);\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n  var Agradecimento = function Agradecimento() {\n    return 'Obrigado por Utilizar Nosso App!';\n  };\n  var handleRestart = function handleRestart() {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowResult(false);\n  };\n  var getResultMessage = function getResultMessage() {\n    if (score == 10) {\n      return 'Sua pontuação foi mais baixa do que o ideal.\\n Para uma rotina mais saudável, recomendamos beber mais água, praticar exercícios regularmente e adotar uma alimentação mais equilibrada.\\n Pequenas mudanças podem fazer uma grande diferença!';\n    } else if (score < 17.5) {\n      return 'Sua rotina tem espaço para melhorias. Recomendamos adicionar mais exercícios físicos à sua semana e aumentar o consumo de frutas e vegetais. Isso ajudará a melhorar seu bem-estar.';\n    } else {\n      return 'Parabéns! Sua rotina está indo muito bem.\\n Continue mantendo seu estilo de vida saudável e ativo. Lembre-se de manter a consistência e se cuidar!';\n    }\n  };\n  if (showResult) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(Text, {\n        style: styles.resultText,\n        children: [\"Resultado Final: \", score, \" pontos\"]\n      }), _jsx(Text, {\n        style: styles.messageText,\n        children: getResultMessage()\n      }), _jsx(Text, {\n        style: styles.AgradecimentoText,\n        children: Agradecimento()\n      }), _jsx(Button, {\n        title: \"Recome\\xE7ar\",\n        onPress: handleRestart\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.questionContainer,\n      children: _jsx(Text, {\n        style: styles.questionText,\n        children: question\n      })\n    }), _jsx(View, {\n      style: styles.optionsContainer,\n      children: options.map(function (option, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleAnswer(option.points);\n          },\n          children: _jsx(Text, {\n            style: styles.answerText,\n            children: option.text\n          })\n        }, index);\n      })\n    }), _jsxs(Text, {\n      style: styles.scoreText,\n      children: [\"Pontua\\xE7\\xE3o: \", score, \" pontos\"]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    borderRadius: 10,\n    marginBottom: 20,\n    border: '1px solid #000'\n  },\n  questionContainer: {\n    backgroundColor: 'RGBA( 230, 230, 250, 1 )',\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 20,\n    width: '80%',\n    border: '1px solid #000'\n  },\n  questionText: {\n    fontSize: 24,\n    textAlign: 'center'\n  },\n  optionsContainer: {\n    width: '80%',\n    border: '1px solid #000',\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: 'RGBA( 230, 230, 250, 1 )'\n  },\n  answerText: {\n    fontSize: 18,\n    marginVertical: 5,\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: 'RGBA( 245, 255, 250, 1 )'\n  },\n  scoreText: {\n    marginTop: 20,\n    fontSize: 24,\n    backgroundColor: 'RGBA( 230, 230, 250, 1 )',\n    padding: 10,\n    borderRadius: 10,\n    border: '1px solid #000'\n  },\n  resultText: {\n    fontSize: 24,\n    marginBottom: 20,\n    backgroundColor: 'RGBA( 230, 230, 250, 1 )',\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 20,\n    width: '80%',\n    border: '1px solid #000'\n  },\n  messageText: {\n    fontSize: 18,\n    marginBottom: 20,\n    backgroundColor: 'RGBA( 230, 230, 250, 1 )',\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 20,\n    width: '80%',\n    border: '1px solid #000'\n  },\n  AgradecimentoText: {\n    fontSize: 18,\n    marginBottom: 20\n  }\n});\nexport default QuestionScreen;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Button","questions","jsxs","_jsxs","jsx","_jsx","QuestionScreen","_useState","_useState2","_slicedToArray","currentQuestionIndex","setCurrentQuestionIndex","_useState3","_useState4","score","setScore","_useState5","_useState6","showResult","setShowResult","currentQuestion","question","options","handleAnswer","points","length","Agradecimento","handleRestart","getResultMessage","style","styles","container","children","resultText","messageText","AgradecimentoText","title","onPress","questionContainer","questionText","optionsContainer","map","option","index","answerText","text","scoreText","create","flex","justifyContent","alignItems","backgroundColor","borderRadius","marginBottom","border","padding","width","fontSize","textAlign","marginVertical","marginTop"],"sources":["C:/Users/Julia/Documents/QuizRotinaV2-master/QuestionScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Button } from 'react-native';\nimport { questions } from './data';\n\nconst QuestionScreen = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const { question, options } = currentQuestion;\n\n  const handleAnswer = (points) => {\n    setScore(score + points);\n\n    // Avance para a próxima pergunta ou mostre o resultado\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n\n  const Agradecimento = () =>{\n    return 'Obrigado por Utilizar Nosso App!'\n  }\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowResult(false);\n  };\n\n  // Função para determinar a mensagem com base na pontuação final\n  const getResultMessage = () => {\n    if (score == 10){\n      return 'Sua pontuação foi mais baixa do que o ideal.\\n Para uma rotina mais saudável, recomendamos beber mais água, praticar exercícios regularmente e adotar uma alimentação mais equilibrada.\\n Pequenas mudanças podem fazer uma grande diferença!'\n    }\n    else if (score < 17.5) {\n      return 'Sua rotina tem espaço para melhorias. Recomendamos adicionar mais exercícios físicos à sua semana e aumentar o consumo de frutas e vegetais. Isso ajudará a melhorar seu bem-estar.';\n    } else {\n      return 'Parabéns! Sua rotina está indo muito bem.\\n Continue mantendo seu estilo de vida saudável e ativo. Lembre-se de manter a consistência e se cuidar!'\n    }\n  };\n\n  if (showResult) {\n    return (\n      <View style={styles.container}>\n        {/* Exibe a pontuação final */}\n        <Text style={styles.resultText}>Resultado Final: {score} pontos</Text>\n        {/* Exibe a mensagem com base na pontuação */}\n        <Text style={styles.messageText}>{getResultMessage()}</Text>\n        {/* Exibe uma mensagem de agradecimento pelo uso do App */}\n        <Text style={styles.AgradecimentoText}>{Agradecimento()}</Text>\n        {/* Botão para recomeçar o jogo */}\n        <Button title=\"Recomeçar\" onPress={handleRestart} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.questionContainer}>\n        {/* Pergunta exibida dentro de um contêiner translúcido */}\n        <Text style={styles.questionText}>{question}</Text>\n      </View>\n      <View style={styles.optionsContainer}>\n        {options.map((option, index) => (\n          <TouchableOpacity key={index} onPress={() => handleAnswer(option.points)}>\n            {/* Alternativas de resposta sem os valores */}\n            <Text style={styles.answerText}>{option.text}</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n      {/* Exibe a pontuação atual */}\n      <Text style={styles.scoreText}>Pontuação: {score} pontos</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.8)', // Cor de fundo da tela\n    borderRadius: 10, // Borda arredondada\n    marginBottom: 20,\n    border: '1px solid #000',\n  },\n  questionContainer: {\n    backgroundColor: 'RGBA( 230, 230, 250, 1 )', // Fundo translúcido da pergunta\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 20,\n    width: '80%',\n    border: '1px solid #000',\n\n  },\n  questionText: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  optionsContainer: {\n    width: '80%',\n    border: '1px solid #000', // Adiciona uma borda ao redor das alternativas\n    padding: 10, // Espaçamento interno\n    borderRadius: 10, // Borda arredondada\n    backgroundColor: 'RGBA( 230, 230, 250, 1 )', // Cor de fundo da tela\n\n  },\n  answerText: {\n    fontSize: 18,\n    marginVertical: 5,\n    padding: 10, // Espaçamento interno\n    borderRadius: 10, // Borda arredondada\n    backgroundColor: 'RGBA( 245, 255, 250, 1 )', // Cor de fundo da tela\n  },\n  scoreText: {\n    marginTop: 20,\n    fontSize: 24,\n    backgroundColor: 'RGBA( 230, 230, 250, 1 )', // Cor de fundo da tela\n    padding: 10, // Espaçamento interno\n    borderRadius: 10, // Borda arredondada\n    border: '1px solid #000', // Adiciona uma borda ao redor da Pontuação\n  },\n  resultText: {\n    fontSize: 24,\n    marginBottom: 20,\n    backgroundColor: 'RGBA( 230, 230, 250, 1 )', // Fundo translúcido da pergunta\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 20,\n    width: '80%',\n    border: '1px solid #000',\n  },\n  messageText: {\n    fontSize: 18,\n    marginBottom: 20,\n    backgroundColor: 'RGBA( 230, 230, 250, 1 )', // Fundo translúcido da pergunta\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 20,\n    width: '80%',\n    border: '1px solid #000',\n  },\n  AgradecimentoText: {\n    fontSize: 18,\n    marginBottom: 20,\n  },\n});\n\nexport default QuestionScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}